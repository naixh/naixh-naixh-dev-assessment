{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Mohamed Naish Develab API",
    "description": "API for the assessment using NodeJS."
  },
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/seed": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Administrator"
        },
        "email": {
          "type": "string",
          "example": "naaixh@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "Password123#"
        },
        "address1": {
          "type": "string",
          "example": "Test Address 123"
        },
        "address2": {
          "type": "string",
          "example": "Test Address 123 more info"
        },
        "city": {
          "type": "string",
          "example": "Male"
        },
        "state": {
          "type": "string",
          "example": "Male"
        },
        "country": {
          "type": "string",
          "example": "Maldives"
        }
      },
      "required": [
        "name",
        "email",
        "password",
        "address1",
        "address2",
        "city",
        "state",
        "country"
      ]
    },
    "UpdateUserModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "sd"
        },
        "name": {
          "type": "string",
          "example": "Yong Jin Lim"
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  }
}